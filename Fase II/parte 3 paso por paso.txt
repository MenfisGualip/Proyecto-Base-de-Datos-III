Ini
[mysqld]
log-bin=mysql-bin
server-id=1

reinicia MySQL
systemctl restart mysql

Crea un usuario para la replicación
CREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'password_repl';
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
FLUSH PRIVILEGES;


Verifica el estado del binlog
SHOW MASTER STATUS;

Configurar el Servidor Esclavo (slave)
Edita my.cnf en el servidor esclavo:
ini
[mysqld]
server-id=2

reinicia MySQL
systemctl restart mysql   

Configura el esclavo para conectarse al maestro
CHANGE MASTER TO MASTER_HOST='IP_DEL_MAESTRO',
MASTER_USER='repl',
MASTER_PASSWORD='password_repl',
MASTER_LOG_FILE='nombre_del_archivo_binlog',
MASTER_LOG_POS=posición_binlog;

Inicia la replicación
START SLAVE;
SHOW SLAVE STATUS\G;

 Partición Horizontal (División por almacenes)

ALTER TABLE Inventario PARTITION BY RANGE (id_almacen) (
    PARTITION p1 VALUES LESS THAN (10),
    PARTITION p2 VALUES LESS THAN (20),
    PARTITION p3 VALUES LESS THAN MAXVALUE
);


 Partición Vertical (División por frecuencia de acceso)
CREATE TABLE ProductoInfo (
    id_producto INT PRIMARY KEY,
    codigo VARCHAR(50) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    precio DECIMAL(10,2) NOT NULL,
    stock INT NOT NULL
);

Tabla secundaria con datos menos consultados:
CREATE TABLE ProductoDetalle (
    id_producto INT PRIMARY KEY,
    descripcion TEXT,
    ubicacion VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_producto) REFERENCES ProductoInfo(id_producto)
);

Configurar el Servidor Maestro
[mysqld]
log-bin=mysql-bin
server-id=1

Reiniciar MySQL
systemctl restart mysql

Crear usuario de replicación
CREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'password_repl';
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
FLUSH PRIVILEGES;

Ver el estado del maestro
SHOW MASTER STATUS;

Partición Horizontal (Separar datos de inventarios según almacenes)
ALTER TABLE Inventario PARTITION BY RANGE (id_almacen) (
    PARTITION p1 VALUES LESS THAN (10),
    PARTITION p2 VALUES LESS THAN (20),
    PARTITION p3 VALUES LESS THAN MAXVALUE
);

Partición Vertical (Separar datos según frecuencia de acceso)
Tabla con datos de acceso frecuente:
CREATE TABLE ProductoInfo (
    id_producto INT PRIMARY KEY,
    codigo VARCHAR(50) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    precio DECIMAL(10,2) NOT NULL,
    stock INT NOT NULL
);

Tabla con datos menos consultados:
CREATE TABLE ProductoDetalle (
    id_producto INT PRIMARY KEY,
    descripcion TEXT,
    ubicacion VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_producto) REFERENCES ProductoInfo(id_producto)
);



